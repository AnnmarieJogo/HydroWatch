#include <LiquidCrystal_I2C.h>
#include <WiFi.h>
#include <WebServer.h>

const char* defaultSSID = "Zachary punya hotspot ðŸŒŸ";
const char* defaultPassword = "zachary123";

WiFiServer server(80);

LiquidCrystal_I2C lcd(0x27, 16, 2);

int sensorPin = T2;
const int ledPin = 4;
volatile long pulse;
unsigned long lastTime;
float volume;


void setup() {
  digitalWrite(ledPin, HIGH);
  Serial.begin(115200);
  WiFi.begin(defaultSSID, defaultPassword);

  Serial.print("Connecting to ");
  Serial.println(defaultSSID);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  server.begin(); // Start the server
  Serial.println("Server started");

  lcd.init();         // initialize the lcd
  lcd.backlight(); 

  pinMode(sensorPin, INPUT);
  Serial.begin(9600);
  attachInterrupt(digitalPinToInterrupt(sensorPin), increase, RISING);
}

void loop() {
   WiFiClient client = server.available(); // Check if a client has connected
  if (client) {
    Serial.println("New Client.");
    String currentLine = "";
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        if (c == '\n') {
          if (currentLine.length() == 0) {
             client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();
            client.println("<!DOCTYPE HTML>");
            client.println("<html>");
            client.println(volume);
            client.println("</html>");
            break;
          } else {
            currentLine = "";
          }
        } else if (c != '\r') {
          currentLine += c;
        }
      }
    }
    client.stop();
    Serial.println("Client Disconnected.");
  }
 
  volume = 2.663 * pulse / 1000 * 30;
  if (millis() - lastTime > 2000) {
    pulse = 0;
    lastTime = millis();
  }

  lcd.setCursor(1, 0);
  lcd.print(volume);
}

ICACHE_RAM_ATTR void increase() {
  pulse++;
}
